package net.dwarfguide.model.core;

/*Generated by MPS */

import javax.annotation.Generated;
import java.util.Map;
import jetbrains.mps.internal.collections.runtime.MapSequence;
import java.util.HashMap;

@Generated(value = {"MPS"}, date = "2011.10.16", comments = "Generated from model net.dwarfguide.model.core")
public class RatingStrategyFactory {
  private Map<RaceProfession, RatingStrategy> strategies;

  public RatingStrategyFactory() {
    strategies = MapSequence.fromMap(new HashMap<RaceProfession, RatingStrategy>());
    MapSequence.fromMap(strategies).put(new RaceProfession(RaceEnum.DWARF, ProfessionEnum.WOODCRAFTER), new RatingWoodcrafterDwarf());
    MapSequence.fromMap(strategies).put(new RaceProfession(RaceEnum.GOBLIN, ProfessionEnum.ADMINISTRATOR), new RatingAdministratorGoblin());
    MapSequence.fromMap(strategies).put(new RaceProfession(RaceEnum.DWARF, ProfessionEnum.AXEMAN), new RatingAxemanDwarf());
  }

  public RatingStrategy getStrategy(RaceEnum raceEnum, ProfessionEnum professionEnum) {
    if (MapSequence.fromMap(strategies).containsKey(new RaceProfession(raceEnum, professionEnum))) {
      return MapSequence.fromMap(strategies).get(new RaceProfession(raceEnum, professionEnum));
    }
    if (RaceEnum.DWARF.equals(raceEnum) && ProfessionEnum.WOODCRAFTER.equals(professionEnum)) {
      return new RatingWoodcrafterDwarf();
    }
    if (RaceEnum.GOBLIN.equals(raceEnum) && ProfessionEnum.ADMINISTRATOR.equals(professionEnum)) {
      return new RatingAdministratorGoblin();
    }
    if (RaceEnum.DWARF.equals(raceEnum) && ProfessionEnum.AXEMAN.equals(professionEnum)) {
      return new RatingAxemanDwarf();
    }
    // No strategy found, return NullObject 
    return new RatingStrategy() {
      public int getRating(Creature creature) {
        return 0;
      }

      public boolean shouldStop(Creature creature) {
        return false;
      }
    };
  }
}
