package net.dwarfguide.creature.structure;

/*Generated by MPS */

import jetbrains.mps.lang.core.structure.BaseConcept;
import jetbrains.mps.smodel.SNode;
import java.util.Iterator;
import java.util.List;
import jetbrains.mps.lang.core.structure.Attribute;
import jetbrains.mps.smodel.SModel;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.project.GlobalScope;

public class LabourCategory extends BaseConcept implements HasName {
  public static final String concept = "net.dwarfguide.creature.structure.LabourCategory";
  public static final String NAME = "name";
  public static final String SHORT_DESCRIPTION = "shortDescription";
  public static final String ALIAS = "alias";
  public static final String VIRTUAL_PACKAGE = "virtualPackage";
  public static final String REF = "ref";
  public static final String SMODEL_ATTRIBUTE = "smodelAttribute";

  public LabourCategory(SNode node) {
    super(node);
  }

  public String getName() {
    return this.getProperty(LabourCategory.NAME);
  }

  public void setName(String value) {
    this.setProperty(LabourCategory.NAME, value);
  }

  public String getShortDescription() {
    return this.getProperty(LabourCategory.SHORT_DESCRIPTION);
  }

  public void setShortDescription(String value) {
    this.setProperty(LabourCategory.SHORT_DESCRIPTION, value);
  }

  public String getAlias() {
    return this.getProperty(LabourCategory.ALIAS);
  }

  public void setAlias(String value) {
    this.setProperty(LabourCategory.ALIAS, value);
  }

  public String getVirtualPackage() {
    return this.getProperty(LabourCategory.VIRTUAL_PACKAGE);
  }

  public void setVirtualPackage(String value) {
    this.setProperty(LabourCategory.VIRTUAL_PACKAGE, value);
  }

  public int getRefsCount() {
    return this.getChildCount(LabourCategory.REF);
  }

  public Iterator<LabourRef> refs() {
    return this.children(LabourRef.class, LabourCategory.REF);
  }

  public List<LabourRef> getRefs() {
    return this.getChildren(LabourRef.class, LabourCategory.REF);
  }

  public void addRef(LabourRef node) {
    this.addChild(LabourCategory.REF, node);
  }

  public void insertRef(LabourRef prev, LabourRef node) {
    this.insertChild(prev, LabourCategory.REF, node);
  }

  public int getSmodelAttributesCount() {
    return this.getChildCount(LabourCategory.SMODEL_ATTRIBUTE);
  }

  public Iterator<Attribute> smodelAttributes() {
    return this.children(Attribute.class, LabourCategory.SMODEL_ATTRIBUTE);
  }

  public List<Attribute> getSmodelAttributes() {
    return this.getChildren(Attribute.class, LabourCategory.SMODEL_ATTRIBUTE);
  }

  public void addSmodelAttribute(Attribute node) {
    this.addChild(LabourCategory.SMODEL_ATTRIBUTE, node);
  }

  public void insertSmodelAttribute(Attribute prev, Attribute node) {
    this.insertChild(prev, LabourCategory.SMODEL_ATTRIBUTE, node);
  }

  public static LabourCategory newInstance(SModel sm, boolean init) {
    return (LabourCategory) SModelUtil_new.instantiateConceptDeclaration("net.dwarfguide.creature.structure.LabourCategory", sm, GlobalScope.getInstance(), init).getAdapter();
  }

  public static LabourCategory newInstance(SModel sm) {
    return LabourCategory.newInstance(sm, false);
  }
}
